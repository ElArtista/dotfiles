#!/bin/bash

#----------------------------------------------------------------------
# Help
#----------------------------------------------------------------------
USAGE="Usage: pkgdiff [OPTIONS]"
HELP="\
pkgdiff [OPTIONS]
Flags:
  -h,--help                     prints current help message
  -a,--all                      prints packages from all sources
  -n,--native-only              prints packages in official repositories
  -m,--foreign-only             prints foreign installed packages (AUR)
  -s,--system-only              prints list packages missing from system
  -l,--list-only                prints system packages missing from lists (default)
"

function die() { echo >&2 "$*"; exit 1; }
function usage() { die "$USAGE"; }
function help() { echo "$HELP"; }

#----------------------------------------------------------------------
# Arguments
#----------------------------------------------------------------------
INCLUDE_NATIVE_PKGS=0
INCLUDE_FOREIGN_PKGS=0
SHOW_SYSTEM_ONLY_PKGS=0
SHOW_LIST_ONLY_PKGS=0

case "$#" in
    0)
        usage ;;
    *)
        while [ $# -gt 0 ]; do
            case "$1" in
                -h|--help)
                    help
                    exit 0
                    ;;
                -a|--all)
                    INCLUDE_NATIVE_PKGS=1
                    INCLUDE_FOREIGN_PKGS=1
                    ;;
                -n|--native-only)
                    INCLUDE_NATIVE_PKGS=1
                    ;;
                -m|--foreign-only)
                    INCLUDE_FOREIGN_PKGS=1
                    ;;
                -s|--system-only)
                    SHOW_SYSTEM_ONLY_PKGS=1
                    ;;
                -l|--list-only)
                    SHOW_LIST_ONLY_PKGS=1
                    ;;
                *)
                    usage ;;
            esac
            shift
        done
esac

# Default to showing packages from all sources
if [ $INCLUDE_NATIVE_PKGS -eq 0 ] && [ $INCLUDE_FOREIGN_PKGS -eq 0 ]; then
    INCLUDE_NATIVE_PKGS=1
    INCLUDE_FOREIGN_PKGS=1
fi

# Default to showing packages only on system
if [ $SHOW_SYSTEM_ONLY_PKGS -eq 0 ] && [ $SHOW_LIST_ONLY_PKGS -eq 0 ]; then
    SHOW_SYSTEM_ONLY_PKGS=1
fi

#----------------------------------------------------------------------
# Entrypoint
#----------------------------------------------------------------------
# Construct lists
plist=()
if [ $INCLUDE_NATIVE_PKGS -eq 1 ]; then
    plist+=($(pkglist -n))
fi
if [ $INCLUDE_FOREIGN_PKGS -eq 1 ]; then
    plist+=($(pkglist -m))
fi
plist=($(printf "%s\n" ${plist[@]} | sort))

# Apply filters
rlist=()
if [ $SHOW_SYSTEM_ONLY_PKGS -eq 1 ]; then
    slist=()
    if [ $INCLUDE_NATIVE_PKGS -eq 1 ]; then
        slist+=($(pacman -Qqne | sort -u))
    fi
    if [ $INCLUDE_FOREIGN_PKGS -eq 1 ]; then
        slist+=($(pacman -Qqme | sort -u))
    fi
    slist=($(printf "%s\n" ${slist[@]} | sort))
    rlist=($(comm -23 <(printf "%s\n" ${slist[@]}) <(printf "%s\n" ${plist[@]})))
fi
if [ $SHOW_LIST_ONLY_PKGS -eq 1 ]; then
    slist=()
    if [ $INCLUDE_NATIVE_PKGS -eq 1 ]; then
        slist+=($(pacman -Qqn | sort -u))
    fi
    if [ $INCLUDE_FOREIGN_PKGS -eq 1 ]; then
        slist+=($(pacman -Qqm | sort -u))
    fi
    slist=($(printf "%s\n" ${slist[@]} | sort))
    rlist=($(comm -13 <(printf "%s\n" ${slist[@]}) <(printf "%s\n" ${plist[@]})))
fi

# Show result
if [ ! ${#rlist} -eq 0 ]; then
    echo ${rlist[@]}
fi
