#!/usr/bin/env bash

# File locations
PANEL_FIFO=/tmp/panel-fifo
MSGFILE=$HOME/.weechat/highlights.txt

# Hardware
WIFI_INTERFACE="wlp2s0"
POWERSUPPLY="/sys/class/power_supply/AC0"
BATTERY="/sys/class/power_supply/BAT0"

# Dimensions
PANEL_HEIGHT=24

# Fonts
PANEL_FONT="Source Sans Pro:size=10"
ICON_FONT="FontAwesome:size=13"

# Colors
COLOR_FOREGROUND='#FFebdbb2'
COLOR_BACKGROUND='#FF282828'
COLOR_ACTIVE_MONITOR_FG='#FF252527'
COLOR_ACTIVE_MONITOR_BG='#FF98971a'
COLOR_INACTIVE_MONITOR_FG='#FFa89984'
COLOR_INACTIVE_MONITOR_BG='#FF282828'
COLOR_FOCUSED_OCCUPIED_FG='#FFebdbb2'
COLOR_FOCUSED_OCCUPIED_BG='#FF458588'
COLOR_FOCUSED_FREE_FG='#FFebdbb2'
COLOR_FOCUSED_FREE_BG='#FF323A44'
COLOR_FOCUSED_URGENT_FG='#FF252527'
COLOR_FOCUSED_URGENT_BG='#FFF9A299'
COLOR_OCCUPIED_FG='#FFd5c4a1'
COLOR_OCCUPIED_BG='#FF282828'
COLOR_FREE_FG='#FF928374'
COLOR_FREE_BG='#FF282828'
COLOR_URGENT_FG='#FFF9A299'
COLOR_URGENT_BG='#FF252527'
COLOR_LAYOUT_FG='#FFeddbb2'
COLOR_LAYOUT_BG='#FF252527'
COLOR_TITLE_FG='#FFeddbb2'
COLOR_TITLE_BG='#FF282828'
COLOR_STATUS_FG='#FFebdbb2'
COLOR_STATUS_BG='#FF282828'
COLOR_SIGNAL_NONE='#FFEBDBB2'
COLOR_SIGNAL_LOW='#FF7C6F64'
COLOR_SIGNAL_MEDIUM='#FF928374'
COLOR_SIGNAL_HIGH='#FFEBDBB2'

# Check if panel is already running
if [[ $(pgrep -cx panel) -gt 1 ]]; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

# Exit gracefully if terminated
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# Remove old panel fifo, create new one
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# Set up bspwm to not overlap the panel
bspc config top_padding "$PANEL_HEIGHT"

# Get bspwms status feed
bspc control --subscribe > "$PANEL_FIFO" &

# Window title
xtitle -sf 'TITLE%s' > "$PANEL_FIFO" &

# Clock
while true; do
    # clock icon is \uf017 if you want to add it
    echo -e "TIME$(date +"%l:%M %p") "
    sleep 30;
done > "$PANEL_FIFO" &

# Date
while true; do
    # calendar icon is \uf073 if you want to add it
    echo -e "DAY$(date +'%a, %b %d')"
    sleep 60
done > "$PANEL_FIFO" &

# Battery
while true; do
    BATT_LEVEL=$(acpi -b | grep -o '[[:digit:]]\+%' | sed 's/%//')
    if [[ $(cat $POWERSUPPLY/online) != 1 ]]; then
    if [[ $BATT_LEVEL -ge 80 ]]; then
        BATT_ICON='\uf240'
    elif [[ $BATT_LEVEL -ge 60 && $BATT_LEVEL -lt 80 ]]; then
        BATT_ICON='\uf241'
    elif [[ $BATT_LEVEL -ge 40 && $BATT_LEVEL -lt 60 ]]; then
        BATT_ICON='\uf242'
    elif [[ $BATT_LEVEL -ge 20 && $BATT_LEVEL -lt 40 ]]; then
        BATT_ICON='\uf243'
    elif [[ $BATT_LEVEL -lt 20 ]]; then
        BATT_ICON='\uf244'
    fi
    else
        BATT_ICON='\uf1e6'
    fi
    #uncomment next and delete the line after that to see percentage
    #echo -e $BATT_ICON $BATT_LEVEL%
    echo -e BAT$BATT_ICON
    sleep 30;
done > "$PANEL_FIFO" &

# Alsa volume
while true; do
    ALSA_VOLUME=$(amixer get Master | grep 'Mono: Playback' | grep -o '...%' | sed 's/\[//' | sed 's/%//' | sed 's/ //')
    ALSA_STATE=$(amixer get Master | grep 'Mono: Playback' | grep -o '\[on]')

    if [[ $ALSA_STATE ]]; then
        if [[ $ALSA_VOLUME -ge 70 ]]; then
            VOLUME_ICON='\uf028'
        elif [[ $ALSA_VOLUME -gt 0 && $ALSA_VOLUME -lt 70 ]]; then
            VOLUME_ICON='\uf027'
        elif [[ $ALSA_VOLUME -eq 0 ]]; then
            VOLUME_ICON='\uf026'
        else
            VOLUME_ICON='\uf026'
        fi
        # uncomment next and delte the line after that to see volume percentage
        #echo -e V$VOLUME_ICON $ALSA_VOLUME
        echo -e VOL$VOLUME_ICON
    fi
    sleep 2.0
done > "$PANEL_FIFO" &

# Weechat (use hl2file weechat script)
while true; do
    UNREADMESSAGES=$(wc -l < "$MSGFILE")
    if [[ $UNREADMESSAGES != 0 ]]; then
        WEECHAT_ICON="\uf075  [$UNREADMESSAGES]"
    else
        WEECHAT_ICON='\uf0e5'
    fi
    echo -e MESSAGE$WEECHAT_ICON
    sleep 5
done > "$PANEL_FIFO" &

# Email (work in progress)
while true; do
    EMAIL_ICON='\uf003'
    echo -e EMAIL$EMAIL_ICON
    sleep 60
done > "$PANEL_FIFO" &

# Wifi
while true; do
#   WIFI_SSID=$(iw $WIFI_INTERFACE link | grep 'SSID' | sed 's/SSID: //' | sed 's/\t//')
    WIFI_SIGNAL=$(iw "$WIFI_INTERFACE" link | grep 'signal' | sed 's/signal: //' | sed 's/ dBm//' | sed 's/\t//')
    if [[ $(iw "$WIFI_INTERFACE" link) != "Not connected." ]]; then
        if [[ $WIFI_SIGNAL -ge -67 ]]; then
            WIFI_COLOR=$COLOR_SIGNAL_HIGH
        elif [[ $WIFI_SIGNAL -ge -70 && $WIFI_SIGNAL -lt -67 ]]; then
            WIFI_COLOR=$COLOR_SIGNAL_MEDIUM
        elif [[ $WIFI_SIGNAL -ge -80 && $WIFI_SIGNAL -lt -70 ]]; then
            WIFI_COLOR=$COLOR_SIGNAL_LOW
        fi
        echo -e "LINK%{F$WIFI_COLOR}\uf1eb%{F-}"
    else
        WIFI_COLOR=$COLOR_SIGNAL_NONE
        echo -e "LINK%{F$WIFI_COLOR}\uf072%{F-}"
    fi
        sleep 10
done > "$PANEL_FIFO" &

# Music controls
while true; do
    SONG_NAME=$(mpc current)
    if [[ -z $(mpc current) ]]; then
        # no music in playlist, or mpd is not running
        echo -e "MUSIC%{F$COLOR_INACTIVE_MONITOR_FG}%{T3}%{A:mpc listall | mpc add; mpc shuffle; mpc play:}%{A3:mpd:}\uf19c  \uf198  \uf17c%{A}%{A}%{T1}%{F-}"
    else
        if mpc status | grep -q 'paused'; then
            # music is paused
            echo -e "MUSIC%{F$COLOR_INACTIVE_MONITOR_FG}%{T3}%{A:mpc prev:}\uf19c %{A}%{A:mpc play:}%{A3:mpc clear:}$SONG_NAME%{A}%{A}%{A:mpc next:} \uf17c%{A}%{T1}%{F-}"
        else
            # music is playing
            echo -e "MUSIC%{F$COLOR_FOCUSED_OCCUPIED_FG}%{T3}%{A:mpc prev:}\uf19c %{A}%{A:mpc pause:}%{A3:mpc clear:}$SONG_NAME%{A}%{A}%{A:mpc next:} \uf17c%{A}%{T1}%{F-}"
        fi
    fi
    sleep 2.0
done > "$PANEL_FIFO" &

panel_bar() {
    num_mon=$(bspc query -M | wc -l)
    PADDING="  "

    while read -r line ; do
        case $line in
            DAY*)
                # date output
                # date has no padding so it is snug with time, append $PADDING if you want
                # you will want to add padding if you use an icon with time
                date="$PADDING${line#???}"
                ;;

            EMAIL*)
                # email alerts
                email="$PADDING${line#?????}$PADDING"
                ;;

            MESSAGE*)
                # Weechat messages
                messages="$PADDING${line#???????}$PADDING"
                ;;

            MUSIC*)
                # music info
                music="$PADDING${line#?????}$PADDING"
                ;;
            TIME*)
                # clock output
                # clock has no padding so it is snug with date, prepend $PADDING if you want
                # you will want to add padding iy you use an icon with time
                clock="$PADDING${line#????}$PADDING"
                ;;

            BAT*)
                # battery percent output
                battery="$PADDING${line#???}$PADDING"
                ;;

            TITLE*)
                # xtitle output
                title="${line#?????}$PADDING$PADDING"
                ;;

            VOL*)
                # alsa volume
                volume="$PADDING${line#???}$PADDING"
                ;;

            LINK*)
                # wifi link
                wifi="$PADDING${line#????}$PADDING"
                ;;

            W*)
                # bspwm internal state
                wm_infos=""
                IFS=':'
                set -- ${line#?}
                while [ $# -gt 0 ] ; do
                    item=$1
                    name=${item#?}
                    case $item in
                        M*)
                            # active monitor
                            if [ $num_mon -gt 1 ] ; then
                                wm_infos="$wm_infos %{F$COLOR_ACTIVE_MONITOR_FG}%{B$COLOR_ACTIVE_MONITOR_BG}$PADDING${name}$PADDING%{B-}%{F-}  "
                            fi
                            ;;
                        m*)
                            # inactive monitor
                            if [ $num_mon -gt 1 ] ; then
                                wm_infos="$wm_infos %{F$COLOR_INACTIVE_MONITOR_FG}%{B$COLOR_INACTIVE_MONITOR_BG}$PADDING${name}$PADDING%{B-}%{F-}  "
                            fi
                            ;;
                        O*)
                            # focused occupied desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_OCCUPIED_FG}%{B$COLOR_FOCUSED_OCCUPIED_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
                            ;;
                        F*)
                            # focused free desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_FREE_FG}%{B$COLOR_FOCUSED_FREE_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
                            ;;
                        U*)
                            # focused urgent desktop
                            wm_infos="${wm_infos}%{F$COLOR_FOCUSED_URGENT_FG}%{B$COLOR_FOCUSED_URGENT_BG}%{U$COLOR_FOREGROUND}%{+u}$PADDING${name}$PADDING%{-u}%{B-}%{F-}"
                            ;;
                        o*)
                            # occupied desktop
                            wm_infos="${wm_infos}%{F$COLOR_OCCUPIED_FG}%{B$COLOR_OCCUPIED_BG}%{A:bspc desktop -f ${name}:}$PADDING${name}$PADDING%{A}%{B-}%{F-}"
                            ;;
                        f*)
                            # free desktop
                            wm_infos="${wm_infos}%{F$COLOR_FREE_FG}%{B$COLOR_FREE_BG}%{A:bspc desktop -f ${name}:}$PADDING${name}$PADDING%{A}%{B-}%{F-}"
                            ;;
                        u*)
                            # urgent desktop
                            wm_infos="${wm_infos}%{F$COLOR_URGENT_FG}%{B$COLOR_URGENT_BG}$PADDING${name}$PADDING%{B-}%{F-}"
                            ;;
                    esac
                    shift
                done
                ;;
        esac
        printf "%s\n" "%{l}${wm_infos}${title}%{c}${music}%{r}${messages}${email}${wifi}${volume}${battery}${date}${clock}"
    done
}

# dump panel into panel_bar and then into lemonbar
panel_bar < "$PANEL_FIFO" | lemonbar -g x"$PANEL_HEIGHT" -f "$PANEL_FONT" -f "$ICON_FONT" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2 | bash &

wait
